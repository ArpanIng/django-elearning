# Generated by Django 4.2.13 on 2024-06-23 12:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="courses.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Enter course title.", max_length=250),
                ),
                ("slug", models.SlugField(max_length=250, unique=True)),
                (
                    "summary",
                    models.CharField(
                        help_text="Enter a summary of a course.", max_length=800
                    ),
                ),
                (
                    "description",
                    django_ckeditor_5.fields.CKEditor5Field(verbose_name="Description"),
                ),
                (
                    "regular_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Price of the course.",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Discount price of the course.",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("DF", "Draft"), ("PB", "Published")],
                        default="PB",
                        help_text="Select the status of the course.",
                        max_length=2,
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(
                        default="default_course_image.jpg",
                        null=True,
                        upload_to="Courses/",
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates whether the course is available for free or not.",
                    ),
                ),
                (
                    "certificate",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates whether the course provides a certificate upon completion.",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("ALL", "All Levels"),
                            ("BE", "Beginner"),
                            ("IN", "Intermediate"),
                            ("AD", "Advanced"),
                        ],
                        default="BE",
                        max_length=4,
                    ),
                ),
                ("publish", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Assign parent category",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="parent_courses",
                        to="courses.category",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="accounts.instructor",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        blank=True,
                        help_text="Assign sub category",
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="subcategory_courses",
                        to="courses.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WhatYoullLearn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        help_text="Enter the specific topic or skill covered in the course.",
                        max_length=255,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="Select the course to which this topic belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="courses.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Specify the order in which this module should appear in the course.",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="Select the corresponding course to associate this module with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="Specify the order in which this lesson should appear in the course."
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="courses.module",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CourseRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        help_text="Enter any prerequisites or requirements for students before enrolling in the course.",
                        max_length=500,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="The course to which this requirement belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirements",
                        to="courses.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enrollment_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("completion_date", models.DateTimeField(blank=True, null=True)),
                ("feedback", models.TextField(blank=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrolled",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "course")},
            },
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["title"], name="courses_cou_title_6e78a2_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["slug"], name="courses_cou_slug_2e551f_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["publish"], name="courses_cou_publish_f42021_idx"
            ),
        ),
    ]
